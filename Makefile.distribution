all: build/rpms/strato-registry-1-0.x86_64.rpm
	docker build .

ifeq ($(V),1)
    Q =
    SWALLOW_STDOUT =
else
    Q = @
    SWALLOW_STDOUT = --quiet
endif

STRATO_REGISTRY_RPMBUILD_ROOT = $(PWD)/build/rpmbuild
build/rpms/strato-registry-1-0.x86_64.rpm:
	@echo "RPM      " $@
	-mkdir -p $(@D)
	mkdir -p $(STRATO_REGISTRY_RPMBUILD_ROOT)
	$(Q)TOP=$(PWD) rpmbuild -bb -vv --define "_topdir $(STRATO_REGISTRY_RPMBUILD_ROOT)" strato-docker-registry/strato-registry.spec $(SWALLOW_STDOUT)
	$(Q)cp $(STRATO_REGISTRY_RPMBUILD_ROOT)/RPMS/x86_64/strato-registry*.x86_64.rpm $@
	$(Q)rm -rf $(STRATO_REGISTRY_RPMBUILD_ROOT)

clean:
	$(Q)rm -rf build/

image:
	skipper build

package: build/rpms/strato-registry-1-0.x86_64.rpm image
	packager pack artifacts.yaml --auto-push

generate_upgrade_manifest:
	python -m packaging_tools.upgrade_manifest_generator artifacts.yaml --file build/update_manifest.json --dirty

deploy: package generate_upgrade_manifest
	upgrade $(IP) build/update_manifest.json -v --timeout=600

